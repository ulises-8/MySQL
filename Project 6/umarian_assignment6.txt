mysql> source /Users/ulisesmarian/Desktop/my_scripts/umarian_assignment6.sql
--------------
-- Ulises Marian
--------------

Query OK, 0 rows affected (0.01 sec)

Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
--------------
/* 
Query 1:
Write a SELECT statement that finds the average salary for
International Foods Restaurant (IFR) employees whose manager ID is 200.
*/

SELECT AVG(salary) AS Average
FROM staff
WHERE manager_id = 200
--------------

+-------------+
| Average     |
+-------------+
| 4569.250000 |
+-------------+
1 row in set (0.00 sec)

--------------
/*
Query 2:
Write a SELECT statement that finds the lowest salary,
the last name who is first in an alphabetical list of employees,
and the last name who is last of an alphabetical list of employees.
Select only employees who are in departments 30 or 60.
*/

SELECT MIN(salary) AS Salary, MIN(last_name), MAX(last_name)
FROM staff
WHERE dept_id IN (30, 60)
--------------

+---------+----------------+----------------+
| Salary  | MIN(last_name) | MAX(last_name) |
+---------+----------------+----------------+
| 1879.00 | Lane           | Zayn           |
+---------+----------------+----------------+
1 row in set (0.00 sec)

--------------
/* Query 3:
Write a SELECT statement that finds what
the most recent hire date of an IFR employee was.
*/

SELECT MAX(hire_date)
FROM staff
--------------

+----------------+
| MAX(hire_date) |
+----------------+
| 2018-02-14     |
+----------------+
1 row in set (0.00 sec)

--------------
/* Query 4:
Write a SQL statement that creates a list including
each employee's first name concatenated to a space
as well as the employee's last name, and the salary
of all employees whose last name contains the string 'ar'.
*/

SELECT CONCAT(first_name, ' ', last_name) AS "employee name", salary
FROM staff
WHERE last_name LIKE '%ar%'
--------------

+---------------+---------+
| employee name | salary  |
+---------------+---------+
| Rylan Ricardo | 6604.00 |
| Nora Marcos   | 1879.00 |
+---------------+---------+
2 rows in set (0.00 sec)

--------------
/*
Query 5:
Write a SQL statement that lists the item number
and item description for all items.
The item descriptions should appear in uppercase letters
*/

SELECT item_number, UPPER(description) AS item_desc
FROM food_items
--------------

+-------------+------------------------+
| item_number | item_desc              |
+-------------+------------------------+
|          80 | CHEESEBURGER           |
|          81 | DOUBLE CHEESEBURGER    |
|          82 | SPICY CHICKEN MCBITE   |
|          83 | CHICKEN SANDWICH       |
|          84 | SIDE SALA              |
|          85 | APPLE SLICES           |
|          86 | SROAST COFFEE          |
|          87 | BBQ SNACK WRAP         |
|          90 | HAMBURGER              |
|          91 | SPICY CHICKEN SANDWICH |
|          92 | ICED LATTE             |
|          93 | CHICKEN MCNUGGETS      |
|          94 | FRUIT & WALNUTS        |
|          95 | BAKED APPLE PIE        |
|          96 | SUGAR COOKIE           |
|          97 | CAESAR SALAD           |
+-------------+------------------------+
16 rows in set (0.00 sec)

--------------
/*
QUERY 6:
IFR is running a promotion that is valid for up to 20 days after
an order is placed. Write a SQL statement that lists the
order ID, customer ID, first name, and last name.
The promotion date is 20 days after the order was placed.
*/

SELECT o.order_number, c.customer_id, c.first_name, c.last_name,
  o.order_date, ADDDATE(o.order_date, INTERVAL 20 DAY) AS promotion_date
FROM orders o
JOIN customers c on o.cust_id = c.customer_id
--------------

+--------------+-------------+------------+-------------+------------+----------------+
| order_number | customer_id | first_name | last_name   | order_date | promotion_date |
+--------------+-------------+------------+-------------+------------+----------------+
|         5343 |          35 | Zachary    | Peter       | 2020-01-03 | 2020-01-23     |
|         5363 |          20 | Ryan       | Jacob       | 2020-10-03 | 2020-10-23     |
|         5393 |          45 | Willie     | Bruce       | 2020-08-03 | 2020-08-23     |
|         5623 |           3 | Michael    | John        | 2020-04-05 | 2020-04-25     |
|         5679 |          20 | Ryan       | Jacob       | 2020-04-03 | 2020-04-23     |
|         5681 |          23 | Stephen    | Larry       | 2020-04-04 | 2020-04-24     |
|         5682 |          40 | Billy      | Marilyn     | 2020-05-09 | 2020-05-29     |
|         5683 |          50 | Philip     | Judy        | 2020-05-09 | 2020-05-29     |
|         5690 |           6 | Christi    | Thomas      | 2020-04-21 | 2020-05-11     |
|         5691 |          29 | Patrick    | Jack        | 2020-07-03 | 2020-07-23     |
|         5693 |           7 | Charles    | Christopher | 2020-08-19 | 2020-09-08     |
|         5694 |          30 | Philip     | Dennis      | 2020-07-03 | 2020-07-23     |
|         5773 |           6 | Christi    | Thomas      | 2020-04-21 | 2020-05-11     |
|         5783 |           3 | Michael    | John        | 2020-04-05 | 2020-04-25     |
|         5791 |          40 | Billy      | Marilyn     | 2020-05-09 | 2020-05-29     |
|         5792 |          50 | Philip     | Judy        | 2020-05-09 | 2020-05-29     |
|         5793 |          45 | Willie     | Bruce       | 2020-08-03 | 2020-08-23     |
|         5794 |          30 | Philip     | Dennis      | 2020-07-03 | 2020-07-23     |
|         5798 |          10 | Thomas     | Rolston     | 2020-03-03 | 2020-03-23     |
|         5799 |          20 | Ryan       | Jacob       | 2020-04-03 | 2020-04-23     |
|         6693 |          43 | Evita      | Hodcroft    | 2020-10-03 | 2020-10-23     |
|         7383 |          43 | Evita      | Hodcroft    | 2020-10-03 | 2020-10-23     |
|         7693 |          20 | Ryan       | Jacob       | 2020-10-03 | 2020-10-23     |
+--------------+-------------+------------+-------------+------------+----------------+
23 rows in set (0.00 sec)

--------------
/*
Query 7:
List the last names and birthdays of IFR employees.
Convert the birth dates to character data.
*/

SELECT last_name, DATE_FORMAT(birthdate, '%W %M %D %Y') AS Birthday
from staff
--------------

+-----------+------------------------------+
| last_name | Birthday                     |
+-----------+------------------------------+
| Landon    | Sunday December 28th 1969    |
| Nolan     | Tuesday January 17th 1989    |
| Griffin   | Monday February 12th 1979    |
| Lane      | Tuesday January 7th 1975     |
| Patrick   | Saturday April 11th 1981     |
| Luka      | Thursday August 22nd 1991    |
| Ricardo   | Tuesday May 30th 1978        |
| Steven    | Wednesday July 12th 1978     |
| Nasir     | Sunday November 21st 1976    |
| Phillip   | Thursday July 14th 1988      |
| Collin    | Friday July 30th 1976        |
| Raymond   | Wednesday August 31st 1983   |
| Rafael    | Saturday May 3rd 1986        |
| Colson    | Saturday June 7th 1980       |
| Spurman   | Thursday July 1st 1982       |
| Justin    | Wednesday October 19th 1988  |
| Manuel    | Friday September 12th 1980   |
| Cooper    | Wednesday July 2nd 1986      |
| Zayden    | Thursday April 6th 1972      |
| Marcos    | Wednesday December 31st 1986 |
| Milan     | Friday May 9th 1980          |
| Diego     | Thursday June 19th 1997      |
| Calvin    | Sunday May 9th 1971          |
| Emanuel   | Saturday November 12th 1983  |
| Ayaan     | Wednesday March 3rd 1976     |
| Edison    | Saturday June 7th 1980       |
| Yusuf     | Wednesday April 19th 1989    |
| Zayn      | Monday April 25th 1994       |
| Andy      | Thursday June 28th 1979      |
| Jeremy    | Tuesday April 2nd 1985       |
+-----------+------------------------------+
30 rows in set (0.00 sec)

--------------
/*
Query 8:
Layla Justin is an employee who has received a $2,000 raise.
Display her first name, last name, current salary, and new salary.
Display both salaries with a $ and two decimal places.
Label his new salary column AS New Salary.
*/

SELECT first_name, last_name, CONCAT('$',salary) AS "Current Salary",
  CONCAT('$',(salary + 2000.00)) AS "New Salary"
FROM staff
WHERE first_name = 'Layla' and last_name = 'Justin'
--------------

+------------+-----------+----------------+------------+
| first_name | last_name | Current Salary | New Salary |
+------------+-----------+----------------+------------+
| Layla      | Justin    | $5168.00       | $7168.00   |
+------------+-----------+----------------+------------+
1 row in set (0.00 sec)

--------------
/*
Query 9:
Create a report listing the first and last names
and month of hire for all employees in the staff table.
*/

SELECT CONCAT(first_name, ' ', last_name) AS "Name",
  MONTH(hire_date) AS 'Anniversary Month'
FROM staff
--------------

+-----------------+-------------------+
| Name            | Anniversary Month |
+-----------------+-------------------+
| Colton Landon   |                 2 |
| Jayden Nolan    |                 2 |
| Katrine Griffin |                 2 |
| Omar Lane       |                 6 |
| Nicolas Patrick |                10 |
| Arthur Luka     |                 5 |
| Rylan Ricardo   |                 3 |
| Peter Steven    |                 2 |
| Emilia Nasir    |                 4 |
| Sarah Phillip   |                 6 |
| Baylor Collin   |                 6 |
| Derek Raymond   |                 8 |
| Rayna Rafael    |                 8 |
| Jere Colson     |                 8 |
| Maya Spurman    |                 3 |
| Layla Justin    |                 2 |
| Jake Manuel     |                 2 |
| Maxwell Cooper  |                 3 |
| Alex Zayden     |                 9 |
| Nora Marcos     |                 2 |
| Frank Milan     |                 2 |
| Ivan Diego      |                 7 |
| Mark Calvin     |                 8 |
| Erik Emanuel    |                 3 |
| Reed Ayaan      |                 8 |
| Marvin Edison   |                 7 |
| Taylor Yusuf    |                 3 |
| Louis Zayn      |                 2 |
| Marco Andy      |                 2 |
| Marcus Jeremy   |                12 |
+-----------------+-------------------+
30 rows in set (0.00 sec)

--------------
/*
Query 10:
Write a SELECT statement that displays the item number
and the number of orders placed for each item.
Show the results in decreasing order and label result column NumOrders.
*/

SELECT item_number, COUNT(QUANTITY) AS NumOrders
FROM order_lines
GROUP BY item_number
ORDER BY NumOrders DESC
--------------

+-------------+-----------+
| item_number | NumOrders |
+-------------+-----------+
|          80 |         7 |
|          90 |         6 |
|          95 |         5 |
|          83 |         4 |
|          85 |         4 |
|          82 |         3 |
|          93 |         3 |
|          87 |         2 |
|          92 |         2 |
|          81 |         1 |
|          86 |         1 |
|          91 |         1 |
|          96 |         1 |
|          97 |         1 |
+-------------+-----------+
14 rows in set (0.00 sec)

--------------
/*
Query 11:
 Write a SQL statement that creates a list of monthly salaries
 from the staff table where the salary is between $700 and $3,000.
 The salaries should be formatted to include a $-sign
 and have two decimal points like: $9999.99.
 */
 
 SELECT staff_id, CONCAT('$', salary) AS "monthly salary"
 FROM staff
 WHERE salary BETWEEN 700.00 AND 3000.00
--------------

+----------+----------------+
| staff_id | monthly salary |
+----------+----------------+
|      125 | $2973.00       |
|      209 | $1136.00       |
|      246 | $2128.00       |
|      524 | $2453.00       |
|     1292 | $1879.00       |
|     1544 | $2459.00       |
|     1611 | $1160.00       |
+----------+----------------+
7 rows in set (0.00 sec)

mysql> notee
