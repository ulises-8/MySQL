mysql> source /Users/ulisesmarian/Desktop/my_scripts/umarian_assignment8.sql
--------------
-- Ulises Marian
--------------

Query OK, 0 rows affected (0.00 sec)

Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
--------------
/* 
Query 1: 
Construct an inline view from the restaurant database
that lists the last name, salary, department ID,
and maximum salary for each department
*/

SELECT s.last_name, s.salary, d.dept_id, d.maxsal
FROM staff s,
       (SELECT dept_id, max(salary) maxsal
        FROM staff
		GROUP BY dept_id) d
WHERE s.dept_id = d.dept_id
AND s.salary = d.maxsal
--------------

+-----------+---------+---------+---------+
| last_name | salary  | dept_id | maxsal  |
+-----------+---------+---------+---------+
| Nolan     | 9646.00 |      10 | 9646.00 |
| Raymond   | 9808.00 |      30 | 9808.00 |
| Spurman   | 7537.00 |      40 | 7537.00 |
| Zayden    | 9661.00 |      20 | 9661.00 |
| Milan     | 9090.00 |      50 | 9090.00 |
| Yusuf     | 3582.00 |      60 | 3582.00 |
+-----------+---------+---------+---------+
6 rows in set (0.00 sec)

--------------
/* Query 2:
Create a new table called my_departments and add all columns
and all rows to it using a subquery from the departments table.
Do a SELECT statement to confirm that you have all the columns and rows.
Create or enable the department_id column as the primary key.
*/

CREATE TABLE my_departments AS
(SELECT *
FROM departments)
--------------

Query OK, 6 rows affected (0.05 sec)
Records: 6  Duplicates: 0  Warnings: 0

--------------
ALTER TABLE my_departments
ADD PRIMARY KEY (department_id)
--------------

Query OK, 0 rows affected (0.04 sec)
Records: 0  Duplicates: 0  Warnings: 0

--------------
SELECT *
FROM my_departments
--------------

+---------------+-----------------+------------+
| department_id | department_name | manager_id |
+---------------+-----------------+------------+
|            10 | Administration  |        200 |
|            20 | Kitchen Staff   |        201 |
|            30 | Delivery Staff  |        124 |
|            40 | IT              |        103 |
|            50 | Floor Staff     |        100 |
|            60 | Accounting      |        205 |
+---------------+-----------------+------------+
6 rows in set (0.00 sec)

--------------
/* Query 3:
Create a view called view_my_departments that includes:
department_id and department_name.
*/

CREATE VIEW view_my_departments AS
SELECT department_id, department_name
FROM departments
--------------

Query OK, 0 rows affected (0.00 sec)

--------------
INSERT INTO view_my_departments (department_id, department_name)
VALUES (105, 'Advertising'),
       (120, 'Custodial'),
       (130, 'Planning')
--------------

Query OK, 3 rows affected (0.00 sec)
Records: 3  Duplicates: 0  Warnings: 0

--------------
/* Query 4:
Add the Human Resources department, department ID 220
to my_departments using view_my_departments.
*/

INSERT INTO view_my_departments (department_id, department_name)
VALUES (220, 'Human Resources')
--------------

Query OK, 1 row affected (0.01 sec)

--------------
SELECT *
FROM view_my_departments
--------------

+---------------+-----------------+
| department_id | department_name |
+---------------+-----------------+
|            10 | Administration  |
|            20 | Kitchen Staff   |
|            30 | Delivery Staff  |
|            40 | IT              |
|            50 | Floor Staff     |
|            60 | Accounting      |
|           105 | Advertising     |
|           120 | Custodial       |
|           130 | Planning        |
|           220 | Human Resources |
+---------------+-----------------+
10 rows in set (0.00 sec)

--------------
/* Query 5:
Create a view named item_ordered.
It consists of the food item number, item description, price,
order number, order date, quantity, and price
for all ordered food items currently on file.
*/

CREATE VIEW item_ordered AS
SELECT f.item_number, f.description, f.price, o.order_number,
  o.order_date, l.quantity
FROM food_items f, orders o, order_lines l
WHERE f.item_number = l.item_number
AND l.order_number = o.order_number
--------------

Query OK, 0 rows affected (0.00 sec)

--------------
/* Query 6:
 Write and execute the command to retrieve the item number, description,
 order number, and quoted price for all orders in the item_ordered
 view for food items with prices that exceed $5.
 */
 
SELECT item_number, description, order_number, QUOTE(price) AS price
FROM item_ordered
WHERE price > 5
--------------

+-------------+----------------------+--------------+---------+
| item_number | description          | order_number | price   |
+-------------+----------------------+--------------+---------+
|          80 | Cheeseburger         |         5343 | '8.09'  |
|          80 | Cheeseburger         |         5773 | '8.09'  |
|          80 | Cheeseburger         |         5783 | '8.09'  |
|          80 | Cheeseburger         |         5792 | '8.09'  |
|          80 | Cheeseburger         |         5794 | '8.09'  |
|          80 | Cheeseburger         |         5798 | '8.09'  |
|          80 | Cheeseburger         |         7383 | '8.09'  |
|          81 | Double Cheeseburger  |         5793 | '13.59' |
|          82 | Spicy Chicken McBite |         5791 | '10.09' |
|          82 | Spicy Chicken McBite |         5793 | '10.09' |
|          82 | Spicy Chicken McBite |         5799 | '10.09' |
|          83 | Chicken Sandwich     |         5363 | '9.59'  |
|          83 | Chicken Sandwich     |         5791 | '9.59'  |
|          83 | Chicken Sandwich     |         5793 | '9.59'  |
|          83 | Chicken Sandwich     |         7383 | '9.59'  |
|          86 | SRoast Coffee        |         5791 | '5.75'  |
+-------------+----------------------+--------------+---------+
16 rows in set (0.00 sec)

--------------
/* Query 7:
 Create a view named salary_view that returns the highest salary,
 lowest salary, average salary, and department name.
 */
 
CREATE VIEW salary_view (dept_name, max_salary, min_salary, avg_salary) AS
SELECT d.department_name, MAX(s.salary), MIN(s.salary), AVG(s.salary)
FROM staff s
JOIN departments d ON s.dept_id = d.department_id
GROUP BY d.department_name
--------------

Query OK, 0 rows affected (0.01 sec)

--------------
/* Query 8:
Create a view named dept_managers_view that returns a
listing of department names along with the
manager initial and surname for that department.
*/

CREATE VIEW dept_managers_view AS
SELECT d.department_name, SUBSTRING(s.first_name, 1, 1) AS initial,
  s.last_name AS last_name
FROM staff s
JOIN departments d
ON s.dept_id = d.department_id
WHERE (s.staff_id IN (SELECT manager_id FROM staff))
--------------

Query OK, 0 rows affected (0.00 sec)

--------------
SELECT *
FROM dept_managers_view
--------------

+-----------------+---------+-----------+
| department_name | initial | last_name |
+-----------------+---------+-----------+
| Administration  | J       | Nolan     |
| Administration  | C       | Landon    |
| Kitchen Staff   | M       | Calvin    |
+-----------------+---------+-----------+
3 rows in set (0.01 sec)

mysql> notee
